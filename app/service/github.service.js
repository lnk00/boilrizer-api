import { createPullRequest } from 'octokit-plugin-create-pull-request';
import { Octokit } from '@octokit/rest';
import buildService from './build.service';

const CustomOctokit = Octokit.plugin(createPullRequest);

export default {
  createRepository(repoName, user) {
    let client = new CustomOctokit({ auth: user.githubaccesstoken });
    return client.repos.createForAuthenticatedUser({ name: repoName, auto_init: true });
  },

  createPullRequest(repoName, user) {
    let client = new CustomOctokit({ auth: user.githubaccesstoken });
    return client.createPullRequest({
      owner: user.githubusername,
      repo: repoName,
      title: 'Boilrizer - Initial Pull Request',
      body: 'This pull request is generated by Boilrizer.',
      head: 'boilrizer',
      changes: [
        {
          files: buildService.fileTree(`./tmp/${repoName}/`),
          commit: 'boilrizer - initial commit',
        },
      ],
    });
  },

  mergePullRequest(repoName, user) {
    let client = new CustomOctokit({ auth: user.githubaccesstoken });
    return client.pulls.merge({
      owner: user.githubusername,
      repo: repoName,
      pull_number: 1,
    });
  },

  getRepository(repoName, user) {
    let client = new CustomOctokit({ auth: user.githubaccesstoken });
    return client.repos.get({
      owner: user.githubusername,
      repo: repoName,
    });
  },
};
